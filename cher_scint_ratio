{
  TFile f("/cp/s2/elagin/sph_out_Te130_center_1k.root"); //or the full path to the file
  TTree* t = (TTree*)f.Get("epgTree");

  TH1F hT_scint("hT_scint","hT_scint",90,30,60);
  TH1F shT_scint("shT_scint","shT_scint",90,30,60);
  TH1F hT_cher("hT_cher","hT_cher",90,30,60);
  TH1F shT_cher("shT_cher","shT_cher",90,30,60);

  const int MAX_epg=100000;
  int evt_num;
  int N_phot;
  int process[MAX_epg]; //0=scintillation, 1=Cherenkov
  float PE_time[MAX_epg];
  float true_time[MAX_epg];
  const int M=22;

  float smear;
  float smear2;
  TRandom rnd;
  float ihT_scint[M];
  float ishT_scint[M];
  float ihT_cher[M];
  float ishT_cher[M];
  float ratio[M];
  float sratio[M];
  float timer[M];

  t->SetBranchAddress("evt_num",&evt_num);
  t->SetBranchAddress("N_phot",&N_phot);
  t->SetBranchAddress("process",process);
  t->SetBranchAddress("PE_time",PE_time);
  t->SetBranchAddress("true_time",true_time);

  int N = t->GetEntries();
  for(int i=0;i!=100;++i)
  {
    t->GetEntry(i);
    cout<<"evt_num = "<<evt_num<<"   PE_time[17] = "<<PE_time[17]<<"  true_time = "<<true_time[17]<<"  process[17] = "<<process[17]<<endl;
    for(int j=0;j!=N_phot;++j)
    {
      smear = rnd.Gaus(0,1);
      smear2 = rnd.Gaus(0,0);
      if(process[j]==0){
        hT_scint->Fill(true_time[j] + smear);
        shT_scint->Fill(true_time[j] + smear2);}
      if(process[j]==1){
        hT_cher->Fill(true_time[j] + smear);
        shT_cher->Fill(true_time[j] + smear2);}
    }
  }

  for(int k=8;k!=30;++k)
  {
    ihT_scint[k-8] = hT_scint->Integral(0,k);
    ishT_scint[k-8] = shT_scint->Integral(0,k);
   ihT_cher[k-8] = hT_cher->Integral(0,k);
    ishT_cher[k-8] = shT_cher->Integral(0,k);
    ratio[k-8] = ihT_cher[k-8]/ihT_scint[k-8];
    sratio[k-8] = ishT_cher[k-8]/ishT_scint[k-8];
    timer[k-8] = (k*.33)+30;
    printf("Timer:\t%f\n",timer[k-8]);
  }

  //printf("Ratio:\t%f\n",ratio);
  //printf("Smeared Ratio:\t%f\n",sratio);

  TCanvas *c1 = new TCanvas("c1", "c1");
  c1->Divide(2,2);
  c1->cd(1);
  hT_scint->Draw();
  hT_cher->Draw("same");

  c1->cd(2);
  TGraph *gr1 = new TGraph(M, timer, ratio);
  gr1->Draw("AC*");

  c1->cd(3);
  shT_scint->Draw();
  shT_cher->Draw("same");

  c1->cd(4);
  TGraph *gr2 = new TGraph(M, timer, sratio);
  gr2->Draw("AC*");
}
